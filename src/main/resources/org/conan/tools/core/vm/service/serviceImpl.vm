#set( $dao = ${model}+"DAO" )
#set( $service = ${model}+"Service" )
#set( $dto = ${model}+"DTO" )
#set( $serviceImpl = ${service}+"Impl")
#set( $insert = "insert"+${model})
#set( $delete = "delete"+${model})
#set( $update = "update"+${model})
#set( $save = "save"+${model})
#set( $getId = "get"+${model}+"ById")
#set( $getOne = "get"+${model}+"One")
#set( $getList = "get"+${model}+"s")
#set( $getPage = ${getList}+"Paging")
#set( $getCount = ${getList}+"Count")
#set( $insert_id = ${model_1}+"."+${insert})
#set( $delete_id = ${model_1}+"."+${delete})
#set( $update_id = ${model_1}+"."+${update})
#set( $getId_id = ${model_1}+"."+${getId})
#set( $getList_id = ${model_1}+"."+${getList})
#set( $getCount_id = ${model_1}+"."+${getCount})
$copyright
package ${service_impl_package};

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import org.conan.base.service.SpringServiceImpl;
import org.conan.base.service.PageInObject;
import org.conan.base.service.PageOutObject;

import ${import_dao};
import ${import_service};
import ${import_model};

/**
 * This is ${model} Service implemention
 * @author $author
 * @date $date
 */
@Service(value="${model_1}Service")
public class ${serviceImpl} extends SpringServiceImpl implements ${service} {

    @Autowired
    ${dao} ${model_1}DAO;

    public int ${insert}(${dto} dto) {
        return ${model_1}DAO.${insert}(dto);
    }
    
    public int ${update}(${dto} dto) {
        return ${model_1}DAO.${update}(dto);
    }
    
    public int ${save}(${dto} dto) {
        if (dto.getId() > 0) {
            return ${update}(dto);
        }
        return ${insert}(dto);
    }

    public int ${save}(${dto} dto, Map<String, Object> paramMap) {
        ${dto} obj = ${getOne}(paramMap);
        if (obj != null) {
            dto.setId(obj.getId());
            return ${update}(dto);
        }
         return ${insert}(dto);
    }

    public int ${delete}(int id) {
        return ${model_1}DAO.${delete}(id);
    }

	public int ${delete}(${dto} dto) {
        return ${model_1}DAO.${delete}s(dto);
    }

    public ${dto} ${getId}(int id) {
        return ${model_1}DAO.${getId}(id);
    }
    
    public ${dto} ${getOne}(Map<String, Object> paramMap) {
        return ${model_1}DAO.${getOne}(paramMap);
    }

    public List<${dto}> ${getList}(Map<String, Object> paramMap) {
        return ${model_1}DAO.${getList}(paramMap);
    }

    public PageOutObject<${dto}> ${getPage}(Map<String, Object> paramMap, PageInObject page) {
        paramMap.put("page", page);
        List<${dto}> list = ${model_1}DAO.${getList}(paramMap);
        int count = ${model_1}DAO.${getList}Count(paramMap);
        return new PageOutObject<${dto}>(count, list, page);
    }
    
    public int ${getCount}(Map<String, Object> paramMap) {
        return ${model_1}DAO.${getList}Count(paramMap);
    }

}
